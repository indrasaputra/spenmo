// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserCardsColumns holds the columns for the "user_cards" table.
	UserCardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "limit_daily", Type: field.TypeFloat64},
		{Name: "limit_monthly", Type: field.TypeFloat64},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "wallet_id", Type: field.TypeInt64, Nullable: true},
	}
	// UserCardsTable holds the schema information for the "user_cards" table.
	UserCardsTable = &schema.Table{
		Name:       "user_cards",
		Columns:    UserCardsColumns,
		PrimaryKey: []*schema.Column{UserCardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_cards_users_user_cards",
				Columns:    []*schema.Column{UserCardsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_cards_user_wallets_user_wallet_cards",
				Columns:    []*schema.Column{UserCardsColumns[7]},
				RefColumns: []*schema.Column{UserWalletsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "usercard_id_user_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UserCardsColumns[0], UserCardsColumns[6], UserCardsColumns[3]},
			},
			{
				Name:    "usercard_user_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UserCardsColumns[6], UserCardsColumns[3]},
			},
		},
	}
	// UserWalletsColumns holds the columns for the "user_wallets" table.
	UserWalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "balance", Type: field.TypeFloat64},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// UserWalletsTable holds the schema information for the "user_wallets" table.
	UserWalletsTable = &schema.Table{
		Name:       "user_wallets",
		Columns:    UserWalletsColumns,
		PrimaryKey: []*schema.Column{UserWalletsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_wallets_users_user_wallets",
				Columns:    []*schema.Column{UserWalletsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UsersTable,
		UserCardsTable,
		UserWalletsTable,
	}
)

func init() {
	UserCardsTable.ForeignKeys[0].RefTable = UsersTable
	UserCardsTable.ForeignKeys[1].RefTable = UserWalletsTable
	UserWalletsTable.ForeignKeys[0].RefTable = UsersTable
}
