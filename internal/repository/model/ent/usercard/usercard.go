// Code generated by entc, DO NOT EDIT.

package usercard

import (
	"time"
)

const (
	// Label holds the string label denoting the usercard type in the database.
	Label = "user_card"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldWalletID holds the string denoting the wallet_id field in the database.
	FieldWalletID = "wallet_id"
	// FieldLimitDaily holds the string denoting the limit_daily field in the database.
	FieldLimitDaily = "limit_daily"
	// FieldLimitMonthly holds the string denoting the limit_monthly field in the database.
	FieldLimitMonthly = "limit_monthly"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeWallet holds the string denoting the wallet edge name in mutations.
	EdgeWallet = "wallet"
	// Table holds the table name of the usercard in the database.
	Table = "user_cards"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "user_cards"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
	// WalletTable is the table that holds the wallet relation/edge.
	WalletTable = "user_cards"
	// WalletInverseTable is the table name for the UserWallet entity.
	// It exists in this package in order to avoid circular dependency with the "userwallet" package.
	WalletInverseTable = "user_wallets"
	// WalletColumn is the table column denoting the wallet relation/edge.
	WalletColumn = "wallet_id"
)

// Columns holds all SQL columns for usercard fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldUserID,
	FieldWalletID,
	FieldLimitDaily,
	FieldLimitMonthly,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
